--- a/com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen.java
+++ b/com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen.java
@@ -70,10 +_,10 @@
         this.callback = callback;
         this.worldType = worldType;
         if (worldTemplatePaginatedList == null) {
-            this.worldTemplateList = new RealmsSelectWorldTemplateScreen.WorldTemplateList(this);
+            this.worldTemplateList = new RealmsSelectWorldTemplateScreen.WorldTemplateList();
             this.fetchTemplatesAsync(new WorldTemplatePaginatedList(10));
         } else {
-            this.worldTemplateList = new RealmsSelectWorldTemplateScreen.WorldTemplateList(this, Lists.newArrayList(worldTemplatePaginatedList.templates));
+            this.worldTemplateList = new RealmsSelectWorldTemplateScreen.WorldTemplateList(Lists.newArrayList(worldTemplatePaginatedList.templates));
             this.fetchTemplatesAsync(worldTemplatePaginatedList);
         }
     }
@@ -85,7 +_,7 @@
     @Override
     public void init() {
         this.layout.addTitleHeader(this.title, this.font);
-        this.worldTemplateList = this.layout.addToContents(new RealmsSelectWorldTemplateScreen.WorldTemplateList(this, this.worldTemplateList.getTemplates()));
+        this.worldTemplateList = this.layout.addToContents(new RealmsSelectWorldTemplateScreen.WorldTemplateList(this.worldTemplateList.getTemplates()));
         LinearLayout linearLayout = this.layout.addToFooter(LinearLayout.horizontal().spacing(10));
         linearLayout.defaultCellSetting().alignHorizontallyCenter();
         this.trailerButton = linearLayout.addChild(Button.builder(TRAILER_BUTTON_NAME, button -> this.onTrailer()).width(100).build());
@@ -342,24 +_,23 @@
     }
 
     class WorldTemplateList extends RealmsObjectSelectionList<RealmsSelectWorldTemplateScreen.Entry> {
-        public WorldTemplateList(final RealmsSelectWorldTemplateScreen param1) {
-            this(var1, Collections.emptyList());
+        public WorldTemplateList() {
+            this(Collections.emptyList());
         }
 
-        public WorldTemplateList(final Iterable<WorldTemplate> param1, final Iterable templates) {
-            super(var1.width, var1.height - 33 - var1.getHeaderHeight(), var1.getHeaderHeight(), 46);
-            this.this$0 = var1;
+        public WorldTemplateList(final Iterable<WorldTemplate> templates) {
+            super(RealmsSelectWorldTemplateScreen.this.width, RealmsSelectWorldTemplateScreen.this.height - 33 - RealmsSelectWorldTemplateScreen.this.getHeaderHeight(), RealmsSelectWorldTemplateScreen.this.getHeaderHeight(), 46);
             templates.forEach(this::addEntry);
         }
 
         public void addEntry(WorldTemplate worldTemplate) {
-            this.addEntry(this.this$0.new Entry(worldTemplate));
+            this.addEntry(new RealmsSelectWorldTemplateScreen.Entry(worldTemplate));
         }
 
         @Override
         public boolean mouseClicked(double mouseX, double mouseY, int button) {
-            if (this.this$0.currentLink != null) {
-                ConfirmLinkScreen.confirmLinkNow(this.this$0, this.this$0.currentLink);
+            if (RealmsSelectWorldTemplateScreen.this.currentLink != null) {
+                ConfirmLinkScreen.confirmLinkNow(RealmsSelectWorldTemplateScreen.this, RealmsSelectWorldTemplateScreen.this.currentLink);
                 return true;
             } else {
                 return super.mouseClicked(mouseX, mouseY, button);
@@ -369,8 +_,8 @@
         @Override
         public void setSelected(@Nullable RealmsSelectWorldTemplateScreen.Entry selected) {
             super.setSelected(selected);
-            this.this$0.selectedTemplate = selected == null ? null : selected.template;
-            this.this$0.updateButtonStates();
+            RealmsSelectWorldTemplateScreen.this.selectedTemplate = selected == null ? null : selected.template;
+            RealmsSelectWorldTemplateScreen.this.updateButtonStates();
         }
 
         @Override
